#!/bin/bash

# This was written by Copilot

# Temporary file to store the timing output
temp_output=$(mktemp)

# Run the command with time and capture the output
# Ensure the exit status is captured correctly
{
  { time "$@"; } 2>&1
  echo $? > "$temp_output-status"
} | tee "$temp_output"

# Read the exit status
command_status=$(cat "$temp_output-status")

# Extract the real time duration from the output
real_time=$(grep "real" "$temp_output" | awk '{print $2}')

# Convert the time format from m:ss to seconds
minutes=$(echo "$real_time" | cut -d'm' -f1)
seconds=$(echo "$real_time" | cut -d'm' -f2 | cut -d's' -f1)
total_seconds=$(echo "$minutes * 60 + $seconds" | bc)

# Determine if the command was a success or failure
if [ "$command_status" -eq 0 ]; then
  result="success"
else
  result="failure"
fi

# Use say to speak the wall clock duration and the result of the command
say "The command took $total_seconds seconds to complete and ended in $result."

# Clean up the temporary files
rm "$temp_output" "$temp_output-status"
